---
	import type { GetStaticPaths } from "astro";
	import  type { PokemonListResponse } from "../../interfaces/pokemon-list.reponse"
	// Codigo Server Only / Momento de construccion

	// importamos la interface de PokemonListResponse
	import Pokemon from "../../components/pokemon/Pokemon.astro";
 	import MainLayout from "../../layouts/MainLayout.astro";


	// hilo asincrono  
	
	export const getStaticPaths = (async ({ paginate }) => {

		const resp = await fetch('https://pokeapi.co/api/v2/pokemon?limit=151');
		const { results} = (await resp.json()) as PokemonListResponse;
		
		// retorna un elemento de tipp page 
		// metodo page recibe los resultado y un objeto de cuantos elementos queremos mostrar por cada pagina
		return paginate(results, { pageSize: 10 }) ;
	}) satisfies GetStaticPaths;


	// desestructuramos nuestro page de las props
	const { page } = Astro.props;

---


<MainLayout title="Pokemon Static | Home">
	<h1 class="text-3xl">Listado de Pokemons</h1>
	<hr>
	
	<section class="grid mt-5 grid-cols-1 sm:grid-cols-4 md:grid-cols-5 gap-4 " aria-label="Listado de Pokemons">
		{
			page.data.map(( {name, url} ) => (
				<Pokemon name={name} url={ url } />
			))
		}
	</section>

	<section class="flex mt-10 gap-2 items-center">
		<!-- Controles de cada pagina para cambiar las tiene el propio metodo page -->
		<a class="btn" href={page.url.prev}>Anteriores</a>
		<a class="btn" href={page.url.next}>Siguientes</a>

		<div class="flex flex-1"></div>
		<span>Pagina 1</span>
	</section>

</MainLayout>


<style>
	.btn {
		@apply bg-blue-500 mx-3 p-2 text-white rounded-md
	}

	.disabled {
		@apply bg-gray-600 text-gray-400
	}
</style>